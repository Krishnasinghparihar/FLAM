{"ast":null,"code":"var _jsxFileName = \"/Users/vaibhavkeshari/Desktop/krishna FLAM/src/context/EventContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { format } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EventContext = /*#__PURE__*/createContext();\nexport const EventProvider = ({\n  children\n}) => {\n  _s();\n  const [events, setEvents] = useState(() => {\n    const stored = localStorage.getItem(\"events\");\n    return stored ? JSON.parse(stored) : [];\n  });\n  const [modalOpen, setModalOpen] = useState(false);\n  const openModal = () => setModalOpen(true);\n  const closeModal = () => setModalOpen(false);\n  const addEvent = event => {\n    const updatedEvents = [...events, event];\n    setEvents(updatedEvents);\n    localStorage.setItem(\"events\", JSON.stringify(updatedEvents));\n  };\n  const editEvent = updatedEvent => {\n    const updatedEvents = events.map(e => e.id === updatedEvent.id ? {\n      ...e,\n      ...updatedEvent\n    } : e);\n    setEvents(updatedEvents);\n    localStorage.setItem(\"events\", JSON.stringify(updatedEvents));\n  };\n  const deleteEvent = id => {\n    const updatedEvents = events.filter(e => e.id !== id);\n    setEvents(updatedEvents);\n    localStorage.setItem(\"events\", JSON.stringify(updatedEvents));\n  };\n  const getEventsForDate = date => {\n    const day = format(date, \"yyyy-MM-dd\");\n    return events.filter(e => e.date === day);\n  };\n  return /*#__PURE__*/_jsxDEV(EventContext.Provider, {\n    value: {\n      events,\n      addEvent,\n      editEvent,\n      deleteEvent,\n      getEventsForDate,\n      modalOpen,\n      openModal,\n      closeModal\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(EventProvider, \"rQ5bwrWhyiAfl1YP2kbmJtMGDL8=\");\n_c = EventProvider;\nvar _c;\n$RefreshReg$(_c, \"EventProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","format","jsxDEV","_jsxDEV","EventContext","EventProvider","children","_s","events","setEvents","stored","localStorage","getItem","JSON","parse","modalOpen","setModalOpen","openModal","closeModal","addEvent","event","updatedEvents","setItem","stringify","editEvent","updatedEvent","map","e","id","deleteEvent","filter","getEventsForDate","date","day","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vaibhavkeshari/Desktop/krishna FLAM/src/context/EventContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport { format } from \"date-fns\";\n\nexport const EventContext = createContext();\n\nexport const EventProvider = ({ children }) => {\n  const [events, setEvents] = useState(() => {\n    const stored = localStorage.getItem(\"events\");\n    return stored ? JSON.parse(stored) : [];\n  });\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const openModal = () => setModalOpen(true);\n  const closeModal = () => setModalOpen(false);\n\n  const addEvent = (event) => {\n    const updatedEvents = [...events, event];\n    setEvents(updatedEvents);\n    localStorage.setItem(\"events\", JSON.stringify(updatedEvents));\n  };\n\n  const editEvent = (updatedEvent) => {\n    const updatedEvents = events.map((e) =>\n      e.id === updatedEvent.id ? { ...e, ...updatedEvent } : e\n    );\n    setEvents(updatedEvents);\n    localStorage.setItem(\"events\", JSON.stringify(updatedEvents));\n  };\n\n  const deleteEvent = (id) => {\n    const updatedEvents = events.filter((e) => e.id !== id);\n    setEvents(updatedEvents);\n    localStorage.setItem(\"events\", JSON.stringify(updatedEvents));\n  };\n\n  const getEventsForDate = (date) => {\n    const day = format(date, \"yyyy-MM-dd\");\n    return events.filter((e) => e.date === day);\n  };\n\n  return (\n    <EventContext.Provider\n      value={{\n        events,\n        addEvent,\n        editEvent,\n        deleteEvent,\n        getEventsForDate,\n        modalOpen,\n        openModal,\n        closeModal\n      }}\n    >\n      {children}\n    </EventContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,OAAO,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAMO,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,MAAM;IACzC,MAAMW,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7C,OAAOF,MAAM,GAAGG,IAAI,CAACC,KAAK,CAACJ,MAAM,CAAC,GAAG,EAAE;EACzC,CAAC,CAAC;EACF,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMkB,SAAS,GAAGA,CAAA,KAAMD,YAAY,CAAC,IAAI,CAAC;EAC1C,MAAME,UAAU,GAAGA,CAAA,KAAMF,YAAY,CAAC,KAAK,CAAC;EAE5C,MAAMG,QAAQ,GAAIC,KAAK,IAAK;IAC1B,MAAMC,aAAa,GAAG,CAAC,GAAGb,MAAM,EAAEY,KAAK,CAAC;IACxCX,SAAS,CAACY,aAAa,CAAC;IACxBV,YAAY,CAACW,OAAO,CAAC,QAAQ,EAAET,IAAI,CAACU,SAAS,CAACF,aAAa,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMG,SAAS,GAAIC,YAAY,IAAK;IAClC,MAAMJ,aAAa,GAAGb,MAAM,CAACkB,GAAG,CAAEC,CAAC,IACjCA,CAAC,CAACC,EAAE,KAAKH,YAAY,CAACG,EAAE,GAAG;MAAE,GAAGD,CAAC;MAAE,GAAGF;IAAa,CAAC,GAAGE,CACzD,CAAC;IACDlB,SAAS,CAACY,aAAa,CAAC;IACxBV,YAAY,CAACW,OAAO,CAAC,QAAQ,EAAET,IAAI,CAACU,SAAS,CAACF,aAAa,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMQ,WAAW,GAAID,EAAE,IAAK;IAC1B,MAAMP,aAAa,GAAGb,MAAM,CAACsB,MAAM,CAAEH,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKA,EAAE,CAAC;IACvDnB,SAAS,CAACY,aAAa,CAAC;IACxBV,YAAY,CAACW,OAAO,CAAC,QAAQ,EAAET,IAAI,CAACU,SAAS,CAACF,aAAa,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMU,gBAAgB,GAAIC,IAAI,IAAK;IACjC,MAAMC,GAAG,GAAGhC,MAAM,CAAC+B,IAAI,EAAE,YAAY,CAAC;IACtC,OAAOxB,MAAM,CAACsB,MAAM,CAAEH,CAAC,IAAKA,CAAC,CAACK,IAAI,KAAKC,GAAG,CAAC;EAC7C,CAAC;EAED,oBACE9B,OAAA,CAACC,YAAY,CAAC8B,QAAQ;IACpBC,KAAK,EAAE;MACL3B,MAAM;MACNW,QAAQ;MACRK,SAAS;MACTK,WAAW;MACXE,gBAAgB;MAChBhB,SAAS;MACTE,SAAS;MACTC;IACF,CAAE;IAAAZ,QAAA,EAEDA;EAAQ;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAChC,EAAA,CAnDWF,aAAa;AAAAmC,EAAA,GAAbnC,aAAa;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}